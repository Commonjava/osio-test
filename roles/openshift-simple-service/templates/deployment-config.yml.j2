apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ app }}
  name: {{ app }}
  namespace: {{ namespace }}
spec:
  replicas: 1
  selector:
    deploymentconfig: {{ app }}
  strategy:
    activeDeadlineSeconds: 21600
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        deploymentconfig: {{ app }}
    spec:
      nodeSelector:
        "{{ app }}": "true"
      containers:
      - image: docker-registry.default.svc:5000/{{ namespace }}/{{ image_name }}:latest
        name: {{ app }}
        ports:
{% for p in services %}
        - containerPort: {{ p.target_port }}
          protocol: {{ p.proto }}
{% endfor %}
        resources:
          requests:
            cpu: {{ cpu_size }}
            memory: {{ mem_size }}
          limits:
            cpu: {{ limit_cpu_size }}
            memory: {{ limit_mem_size }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
{% for v in volumes %}
        - name: vol-{{ v.name }}
          mountPath: {{ v.mount_path }}
{% endfor %}
{% for v in configmaps %}
        - name: vol-{{ v.config_name }}
          mountPath: {{ v.mount_path }}
{% endfor %}
{% for v in secrets %}
        - name: vol-{{ v.secret_name }}
          mountPath: {{ v.mount_path }}
{% endfor %}
      schedulerName: default-scheduler
      volumes:
{% for v in volumes %}
      - name: vol-{{ v.name }}
        persistentVolumeClaim:
          claimName: {{ v.data_volume }}
{% endfor %}
{% for v in configmaps %}
      - name: vol-{{ v.config_name }}
        persistentVolumeClaim:
          defaultMode: {{ v.mount_mode | default(0755) }}
          name: {{ v.config_name }}
{% endfor %}
{% for v in secrets %}
      - name: vol-{{ v.secret_name }}
        persistentVolumeClaim:
          defaultMode: {{ v.mount_mode }}
          name: {{ v.secret_name }}
{% endfor %}
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ app }}
      from:
        kind: ImageStreamTag
        name: {{ image_name }}:latest
        namespace: {{ namespace }}
    type: ImageChange
